data1 = sc.textFile("file:///usr/local/data.csv").map(lambda line: line.split(",")).map(line: (line[0],line[1],line[2],line[3],line[4],line[5],line[6],line[11],line[20],line[21],line[22],line[23],line[24],line[38],line[39],line[40],line[41],line[307]))

a = data1.map(lambda line: (line[0],line[39]))
b = a.map(lambda line: (line[0],line[1].split("/")))
c = b.filter(lambda x: x[1][0] == '')
d = b.filter(lambda x: x[1][0] != '')
e = d.map(lambda l: (l[0],(l[1][2]+"-"+l[1][1]+"-"+l[1][0]+"T00:00:00Z")))  
f = e.union(c)
g = f.map(lambda l: (l[0],l[1]))
h = data1.map(lambda l: (l[0],(line[1],line[2],line[3],line[4],line[5],line[6],line[11],line[20],line[21],line[22],line[23],line[24],line[38],line[40],line[41],line[307])))
i = h.join(g)
j = i.map(lambda l: (l[0],l[1][0][0],l[1][0][1],l[1][0][2],l[1][0][3],l[1][0][4],l[1][0][5],l[1][0][6],l[1][0][7],l[1][0][8],l[1][0][9],l[1][0][10],l[1][0][11],l[1][0][12],l[1][0][13],l[1][0][14],l[1][0][15],l[1][1]))
k = j.map(lambda l: (l[0],l[1],l[2],l[3],l[4],l[5],l[6],l[7],l[8],l[9],l[10],l[11],l[12],l[13],l[17],l[14],l[15],l[16]))

l = data1.map(lambda line: (line[0],line[40]))
m = l.map(lambda line: (line[0],line[1].split("/")))
n = m.filter(lambda x: x[1][0] == '')
o = m.filter(lambda x: x[1][0] != '')
p = o.map(lambda l: (l[0],(l[1][2]+"-"+l[1][1]+"-"+l[1][0]+"T00:00:00Z")))  
q = p.union(n)
r = q.map(lambda l: (l[0],l[1]))
s = k.map(lambda l: (l[0],(line[1],line[2],line[3],line[4],line[5],line[6],line[7],line[8],line[9],line[10],line[11],line[12],line[13],line[14],line[15],line[16])))
t = s.join(r)
u = t.map(lambda l: (l[0],l[1][0][0],l[1][0][1],l[1][0][2],l[1][0][3],l[1][0][4],l[1][0][5],l[1][0][6],l[1][0][7],l[1][0][8],l[1][0][9],l[1][0][10],l[1][0][11],l[1][0][12],l[1][0][13],l[1][0][14],l[1][0][15],l[1][1]))
v = u.map(lambda l: (l[0],l[1],l[2],l[3],l[4],l[5],l[6],l[7],l[8],l[9],l[10],l[11],l[12],l[13],l[14],l[17],l[15],l[16]))

pairRDD1 = v.map(lambda line: (line[17],(line[0],line[1],line[2],line[3],line[4],line[5],line[6],line[7],line[8],line[9],line[10],line[11],line[12],line[13],line[14],line[15],line[16])))
solePropCodes1 = sc.textFile("file:///usr/local/solePropCodes.csv").map(lambda line: line.split(",")).map(line: (line[0],line[1]))
pairRDD2 = solePropCodes1.map(lambda line: (line[0],line[1]))
join1 = pairRDD1.leftOuterJoin(pairRDD2)
removeKeyColumn1 = join1.map(lambda line: line[1])
flattenTuples1 = removeKeyColumn1.map(lambda line: (line[0][0],line[0][1],line[0][2],line[0][3],line[0][4],line[0][5],line[0][6],line[0][7],line[0][8],line[0][9],line[0][10],line[0][11],line[0][12],line[0][13],line[0][14],line[0][15],line[0][16],line[1]))
changeOrder1 = flattenTuples1.map(lambda line: (line[0],line[1],line[2],line[3],line[4],line[5],line[6],line[7],line[8],line[9],line[10],line[11],line[12],line[13],line[14],line[15],line[16],line[17]))

pairRDD3 = changeOrder1.map(lambda line: (line[11],(line[0],line[1],line[2],line[3],line[4],line[5],line[6],line[7],line[8],line[9],line[10],line[12],line[13],line[14],line[15],line[16],line[17])))
stateCodes1 = sc.textFile("file:///usr/local/stateCodes.csv").map(lambda line: line.split(",")).map(line: (line[0],line[1]))
pairRDD4 = stateCodes1.map(lambda line: (line[0],line[1]))
join2 = pairRDD3.leftOuterJoin(pairRDD4)
removeKeyColumn2 = join2.map(lambda line: line[1])
flattenTuples2 = removeKeyColumn2.map(lambda line: (line[0][0],line[0][1],line[0][2],line[0][3],line[0][4],line[0][5],line[0][6],line[0][7],line[0][8],line[0][9],line[0][10],line[0][11],line[0][12],line[0][13],line[0][14],line[0][15],line[0][16],line[1]))
changeOrder2 = flattenTuples2.map(lambda line: (line[0],line[1],line[2],line[3],line[4],line[5],line[6],line[7],line[8],line[9],line[10],line[17],line[11],line[12],line[13],line[14],line[15],line[16]))

pairRDD5 = changeOrder2.map(lambda line: (line[13],(line[0],line[1],line[2],line[3],line[4],line[5],line[6],line[7],line[8],line[9],line[10],line[11],line[12],line[14],line[15],line[16],line[17])))
npiDeactCodes1 = sc.textFile("file:///usr/local/npiDeactCodes.csv").map(lambda line: line.split(",")).map(line: (line[0],line[1]))
pairRDD6 = stateCodes1.map(lambda line: (line[0],line[1]))
join3 = pairRDD5.leftOuterJoin(pairRDD6)
removeKeyColumn3 = join3.map(lambda line: line[1])
flattenTuples3 = removeKeyColumn2.map(lambda line: (line[0][0],line[0][1],line[0][2],line[0][3],line[0][4],line[0][5],line[0][6],line[0][7],line[0][8],line[0][9],line[0][10],line[0][11],line[0][12],line[0][13],line[0][14],line[0][15],line[0][16],line[1]))
changeOrder3 = flattenTuples3.map(lambda line: (line[0],line[1],line[2],line[3],line[4],line[5],line[6],line[7],line[8],line[9],line[10],line[11],line[12],line[17],line[13],line[14],line[15],line[16]))
